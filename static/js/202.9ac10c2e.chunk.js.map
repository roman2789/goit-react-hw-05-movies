{"version":3,"file":"static/js/202.9ac10c2e.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGVC,EAAU,mCAEHC,EAAiB,mCAAG,oGACVH,EAAAA,EAAAA,IAAA,UAAaC,EAAb,KAAqC,CACxDG,OAAQ,CACNC,QAASH,KAHkB,cACzBI,EADyB,yBAMxBA,EAAOC,KAAKC,SANY,2CAAH,qDASjBC,EAAe,mCAAG,WAAMC,GAAN,uFACRV,EAAAA,EAAAA,IAAA,UAAaC,EAAb,KAAwC,CAC3DG,OAAQ,CACNC,QAASH,EACTQ,MAAAA,KAJyB,cACvBJ,EADuB,yBAOtBA,EAAOC,KAAKC,SAPU,2CAAH,sDAUfG,EAAe,mCAAG,WAAMC,GAAN,uFACTZ,EAAAA,EAAAA,IAAA,UAAaC,EAAb,YAAwCW,EAAxC,KAA+C,CACjER,OAAQ,CACNC,QAASH,KAHgB,cACvBW,EADuB,yBAMtBA,EAAMN,MANgB,2CAAH,sDASfO,EAAe,mCAAG,WAAMF,GAAN,uFACPZ,EAAAA,EAAAA,IAAA,gBAAmBY,GAAnB,OAAwBX,EAAxB,KAAoD,CACxEG,OAAQ,CACNC,QAASH,KAHgB,cACvBa,EADuB,yBAMtBA,EAAQR,KAAKS,MANS,2CAAH,sDASfC,EAAe,mCAAG,WAAML,GAAN,uFACPZ,EAAAA,EAAAA,IAAA,gBAAmBY,GAAnB,OAAwBX,EAAxB,KAAoD,CACxEG,OAAQ,CACNC,QAASH,KAHgB,cACvBgB,EADuB,yBAMtBA,EAAQX,KAAKC,SANS,2CAAH,qD,iICjDfW,EAAWC,EAAAA,GAAAA,GAAH,uHAORC,EAAWD,EAAAA,GAAAA,GAAH,gD,SC4CrB,EA/Ca,WACX,OAA2BE,EAAAA,EAAAA,UAAS,MAApC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAEQhB,GAAOiB,EAAAA,EAAAA,MAAPjB,GAiBR,OAfAkB,EAAAA,EAAAA,YAAU,WACRF,GAAW,IACXd,EAAAA,EAAAA,IAAgBF,GACbmB,MAAK,SAAAC,GACJR,EAASQ,EACV,IACAC,OAAM,SAAAR,GACLS,QAAQC,IAAIV,GACZC,EAAS,iBACV,IACAU,SAAQ,kBAAMR,GAAW,EAAjB,GACZ,GAAE,CAAChB,IAEJsB,QAAQC,IAAIZ,IAGV,gCACGI,GAAW,aACXF,IAAS,yBAAMA,KAChB,SAACN,EAAD,UACGI,GACCA,EAAOc,KAAI,SAAAC,GAAK,OACd,UAACjB,EAAD,YACE,gBACEkB,IACED,EAAME,aAAN,0CACuCF,EAAME,c,stZAG/CC,IAAKH,EAAMI,iBAEb,wBAAKJ,EAAMI,iBACX,uBAAIJ,EAAMK,cAVGL,EAAM1B,GADP,QAiBzB,C","sources":["API.js","components/Cast/Cast.component.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nconst API_KEY = 'e779e884534a7fdc136df07bb4867833';\n\nexport const getTrendingMovies = async () => {\n  const movies = await axios.get(`${END_POINTS.trending}?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return movies.data.results;\n};\n\nexport const getSearchMovies = async query => {\n  const movies = await axios.get(`${END_POINTS.querySearch}?`, {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n  return movies.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const movie = await axios.get(`${END_POINTS.movieDetails}/${id}?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return movie.data;\n};\n\nexport const getMovieCredits = async id => {\n  const credits = await axios.get(`movie/${id}${END_POINTS.movieCredits}?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return credits.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const reviews = await axios.get(`movie/${id}${END_POINTS.movieReviews}?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return reviews.data.results;\n};\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  list-style: none;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 15px;\n`;\n\nexport const CastItem = styled.li`\n  margin-bottom: 25px;\n`;\n","import { getMovieCredits } from 'API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport noPhoto from '../../images/no_photo.jpg';\nimport { CastList, CastItem } from './Cast.component';\n\nconst Cast = () => {\n  const [actors, setActor] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    setLoading(true);\n    getMovieCredits(id)\n      .then(info => {\n        setActor(info);\n      })\n      .catch(error => {\n        console.log(error);\n        setError('No information');\n      })\n      .finally(() => setLoading(false));\n  }, [id]);\n\n  console.log(actors);\n\n  return (\n    <>\n      {loading && 'Loading...'}\n      {error && <div>{error}</div>}\n      <CastList>\n        {actors &&\n          actors.map(actor => (\n            <CastItem key={actor.id}>\n              <img\n                src={\n                  actor.profile_path\n                    ? `https://image.tmdb.org/t/p/w200/${actor.profile_path}`\n                    : noPhoto\n                }\n                alt={actor.original_name}\n              />\n              <h4>{actor.original_name}</h4>\n              <p>{actor.character}</p>\n            </CastItem>\n          ))}\n      </CastList>\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","END_POINTS","API_KEY","getTrendingMovies","params","api_key","movies","data","results","getSearchMovies","query","getMovieDetails","id","movie","getMovieCredits","credits","cast","getMovieReviews","reviews","CastList","styled","CastItem","useState","actors","setActor","error","setError","loading","setLoading","useParams","useEffect","then","info","catch","console","log","finally","map","actor","src","profile_path","alt","original_name","character"],"sourceRoot":""}