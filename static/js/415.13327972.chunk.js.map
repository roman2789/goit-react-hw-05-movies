{"version":3,"file":"static/js/415.13327972.chunk.js","mappings":"kTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGVC,EAAU,mCAEHC,EAAiB,mCAAG,oGACVH,EAAAA,EAAAA,IAAA,UAAaC,EAAb,KAAqC,CACxDG,OAAQ,CACNC,QAASH,KAHkB,cACzBI,EADyB,yBAMxBA,EAAOC,KAAKC,SANY,2CAAH,qDASjBC,EAAe,mCAAG,WAAMC,GAAN,uFACRV,EAAAA,EAAAA,IAAA,UAAaC,EAAb,KAAwC,CAC3DG,OAAQ,CACNC,QAASH,EACTQ,MAAAA,KAJyB,cACvBJ,EADuB,yBAOtBA,EAAOC,KAAKC,SAPU,2CAAH,sDAUfG,EAAe,mCAAG,WAAMC,GAAN,uFACTZ,EAAAA,EAAAA,IAAA,UAAaC,EAAb,YAAwCW,EAAxC,KAA+C,CACjER,OAAQ,CACNC,QAASH,KAHgB,cACvBW,EADuB,yBAMtBA,EAAMN,MANgB,2CAAH,sDASfO,EAAe,mCAAG,WAAMF,GAAN,uFACPZ,EAAAA,EAAAA,IAAA,gBAAmBY,GAAnB,OAAwBX,EAAxB,KAAoD,CACxEG,OAAQ,CACNC,QAASH,KAHgB,cACvBa,EADuB,yBAMtBA,EAAQR,KAAKS,MANS,2CAAH,sDASfC,EAAe,mCAAG,WAAML,GAAN,uFACPZ,EAAAA,EAAAA,IAAA,gBAAmBY,GAAnB,OAAwBX,EAAxB,KAAoD,CACxEG,OAAQ,CACNC,QAASH,KAHgB,cACvBgB,EADuB,yBAMtBA,EAAQX,KAAKC,SANS,2CAAH,qD,8CCvB5B,IAzBkB,SAAC,GAA0B,IAAxBF,EAAuB,EAAvBA,OAAQa,EAAe,EAAfA,SAC3B,OACE,+BACE,wBACGb,EAAOc,KAAI,SAAAP,GAAK,OACf,yBACE,SAAC,KAAD,CAASQ,GAAE,kBAAaR,EAAMD,IAAMU,MAAO,CAAEC,KAAMJ,GAAnD,SACGN,EAAMW,OAASX,EAAMY,kBAFjBZ,EAAMD,GADA,OAUxB,C,mICuBD,UAlCa,WACX,OAA4Bc,EAAAA,EAAAA,UAAS,IAArC,eAAOpB,EAAP,KAAeqB,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KAEMZ,GAAWa,EAAAA,EAAAA,MAmBjB,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,2FACrBH,GAAW,GADU,mBAGK5B,EAAAA,EAAAA,MAHL,cAGbgC,EAHa,OAInBR,EAAUQ,GAJS,kBAKZA,GALY,gCAOnBN,EAAS,kCACTO,QAAQC,IAAR,MARmB,yBAUnBN,GAAW,GAVQ,4EAAH,qDAapBG,GACD,GAAE,KAGD,2BACGJ,IAAW,SAAC,IAAD,KACVA,IAAYxB,EAAOgC,QAAU,YAC9BV,IAAS,yBAAMA,IACftB,IAAU,SAAC,IAAD,CAAWA,OAAQA,EAAQa,SAAUA,MAGrD,C","sources":["API.js","components/MovieList/MovieLIst.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nconst API_KEY = 'e779e884534a7fdc136df07bb4867833';\n\nexport const getTrendingMovies = async () => {\n  const movies = await axios.get(`${END_POINTS.trending}?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return movies.data.results;\n};\n\nexport const getSearchMovies = async query => {\n  const movies = await axios.get(`${END_POINTS.querySearch}?`, {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n  return movies.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const movie = await axios.get(`${END_POINTS.movieDetails}/${id}?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return movie.data;\n};\n\nexport const getMovieCredits = async id => {\n  const credits = await axios.get(`movie/${id}${END_POINTS.movieCredits}?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return credits.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const reviews = await axios.get(`movie/${id}${END_POINTS.movieReviews}?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return reviews.data.results;\n};\n","import PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nconst MovieList = ({ movies, location }) => {\n  return (\n    <>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title || movie.original_title}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\nexport default MovieList;\n","import { useEffect, useState } from 'react';\nimport { getTrendingMovies } from '../API';\nimport { useLocation } from 'react-router-dom';\nimport MovieList from 'components/MovieList/MovieLIst';\nimport LoaderComponent from '../components/Loader/Loader';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const trendingMovies = async () => {\n      setLoading(true);\n      try {\n        const trendList = await getTrendingMovies();\n        setMovies(trendList);\n        return trendList;\n      } catch (error) {\n        setError('Ooops. Something went wrong...');\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    trendingMovies();\n  }, []);\n\n  return (\n    <div>\n      {loading && <LoaderComponent />}\n      {!loading && !movies.length && 'NOT FOUND'}\n      {error && <div>{error}</div>}\n      {movies && <MovieList movies={movies} location={location} />}\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["axios","END_POINTS","API_KEY","getTrendingMovies","params","api_key","movies","data","results","getSearchMovies","query","getMovieDetails","id","movie","getMovieCredits","credits","cast","getMovieReviews","reviews","location","map","to","state","from","title","original_title","useState","setMovies","error","setError","loading","setLoading","useLocation","useEffect","trendingMovies","trendList","console","log","length"],"sourceRoot":""}