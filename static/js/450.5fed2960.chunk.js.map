{"version":3,"file":"static/js/450.5fed2960.chunk.js","mappings":"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","sources":["API.js","components/MovieList/MovieLIst.jsx","components/SearchBar.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nconst API_KEY = 'e779e884534a7fdc136df07bb4867833';\n\nexport const getTrendingMovies = async () => {\n  const movies = await axios.get(`${END_POINTS.trending}?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return movies.data.results;\n};\n\nexport const getSearchMovies = async query => {\n  const movies = await axios.get(`${END_POINTS.querySearch}?`, {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n  return movies.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const movie = await axios.get(`${END_POINTS.movieDetails}/${id}?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return movie.data;\n};\n\nexport const getMovieCredits = async id => {\n  const credits = await axios.get(`movie/${id}${END_POINTS.movieCredits}?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return credits.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const reviews = await axios.get(`movie/${id}${END_POINTS.movieReviews}?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return reviews.data.results;\n};\n","import PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nconst MovieList = ({ movies, location }) => {\n  return (\n    <>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title || movie.original_title}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\nexport default MovieList;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchBar = ({ onSearch }) => {\n  const [query, setQuery] = useState('');\n\n  const handleQuery = e => {\n    setQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      alert('Enter the film title');\n    }\n\n    onSearch(query);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"searchQuery\"\n          autoComplete=\"off\"\n          onChange={handleQuery}\n          value={query}\n          placeholder=\"Search ...\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n    </>\n  );\n};\n\nexport default SearchBar;\n\nSearchBar.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { getSearchMovies } from '../API';\nimport SearchBar from 'components/SearchBar';\nimport MovieList from 'components/MovieList/MovieLIst';\nimport LoaderComponent from '../components/Loader/Loader';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  const querySearch = searchParams.get('query');\n\n  useEffect(() => {\n    if (!querySearch) {\n      return;\n    }\n    const getMovie = () => {\n      setLoading(true);\n      getSearchMovies(querySearch)\n        .then(searchList => {\n          if (!searchList) {\n            return alert('No movies found');\n          }\n          setMovies(searchList);\n        })\n        .catch(error => {\n          setError('Sorry, something went wrong!!!');\n          console.log(error);\n        })\n        .finally(setLoading(false));\n    };\n    getMovie();\n  }, [querySearch]);\n\n  const onSubmit = queryValue => {\n    setSearchParams({ query: `${queryValue}` });\n  };\n\n  return (\n    <>\n      {loading && <LoaderComponent />}\n      {error && <div>{error}</div>}\n      <SearchBar onSearch={onSubmit} />\n      {movies && <MovieList movies={movies} location={location} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","END_POINTS","API_KEY","getTrendingMovies","params","api_key","movies","data","results","getSearchMovies","query","getMovieDetails","id","movie","getMovieCredits","credits","cast","getMovieReviews","reviews","location","map","to","state","from","title","original_title","onSearch","useState","setQuery","onSubmit","e","preventDefault","trim","alert","type","name","autoComplete","onChange","target","value","toLowerCase","placeholder","setMovies","loading","setLoading","error","setError","useSearchParams","searchParams","setSearchParams","useLocation","querySearch","get","useEffect","then","searchList","catch","console","log","finally","Loader","queryValue"],"sourceRoot":""}