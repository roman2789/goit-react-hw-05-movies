{"version":3,"file":"static/js/681.d04b3050.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGVC,EAAU,mCAEHC,EAAiB,mCAAG,oGACVH,EAAAA,EAAAA,IAAA,UAAaC,EAAb,KAAqC,CACxDG,OAAQ,CACNC,QAASH,KAHkB,cACzBI,EADyB,yBAMxBA,EAAOC,KAAKC,SANY,2CAAH,qDASjBC,EAAe,mCAAG,WAAMC,GAAN,uFACRV,EAAAA,EAAAA,IAAA,UAAaC,EAAb,KAAwC,CAC3DG,OAAQ,CACNC,QAASH,EACTQ,MAAAA,KAJyB,cACvBJ,EADuB,yBAOtBA,EAAOC,KAAKC,SAPU,2CAAH,sDAUfG,EAAe,mCAAG,WAAMC,GAAN,uFACTZ,EAAAA,EAAAA,IAAA,UAAaC,EAAb,YAAwCW,EAAxC,KAA+C,CACjER,OAAQ,CACNC,QAASH,KAHgB,cACvBW,EADuB,yBAMtBA,EAAMN,MANgB,2CAAH,sDASfO,EAAe,mCAAG,WAAMF,GAAN,uFACPZ,EAAAA,EAAAA,IAAA,gBAAmBY,GAAnB,OAAwBX,EAAxB,KAAoD,CACxEG,OAAQ,CACNC,QAASH,KAHgB,cACvBa,EADuB,yBAMtBA,EAAQR,KAAKS,MANS,2CAAH,sDASfC,EAAe,mCAAG,WAAML,GAAN,uFACPZ,EAAAA,EAAAA,IAAA,gBAAmBY,GAAnB,OAAwBX,EAAxB,KAAoD,CACxEG,OAAQ,CACNC,QAASH,KAHgB,cACvBgB,EADuB,yBAMtBA,EAAQX,KAAKC,SANS,2CAAH,qD,8ECL5B,UA1CgB,WACd,OAA8BW,EAAAA,EAAAA,UAAS,MAAvC,eAAOD,EAAP,KAAgBE,EAAhB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KAEQZ,GAAOa,EAAAA,EAAAA,MAAPb,GAoBR,OAlBAc,EAAAA,EAAAA,YAAU,WACRF,GAAW,IACXP,EAAAA,EAAAA,IAAgBL,GACbe,MAAK,SAAAC,GACCA,EAAIC,QAITC,QAAQC,IAAIH,GACZR,EAAWQ,IAJTN,EAAS,aAKZ,IACAU,OAAM,SAAAX,GACLS,QAAQC,IAAIV,GACZC,EAAS,2BACV,IACAW,SAAQ,kBAAMT,GAAW,EAAjB,GACZ,GAAE,CAACZ,KAGF,2BACGW,GAAW,cACXF,IAAS,yBAAMA,KAChB,wBACGH,GACCA,EAAQgB,KAAI,SAAAC,GAAM,OAChB,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAOvB,GADA,QAS3B,C","sources":["API.js","components/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nconst API_KEY = 'e779e884534a7fdc136df07bb4867833';\n\nexport const getTrendingMovies = async () => {\n  const movies = await axios.get(`${END_POINTS.trending}?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return movies.data.results;\n};\n\nexport const getSearchMovies = async query => {\n  const movies = await axios.get(`${END_POINTS.querySearch}?`, {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n  return movies.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const movie = await axios.get(`${END_POINTS.movieDetails}/${id}?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return movie.data;\n};\n\nexport const getMovieCredits = async id => {\n  const credits = await axios.get(`movie/${id}${END_POINTS.movieCredits}?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return credits.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const reviews = await axios.get(`movie/${id}${END_POINTS.movieReviews}?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return reviews.data.results;\n};\n","import { getMovieReviews } from 'API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    setLoading(true);\n    getMovieReviews(id)\n      .then(res => {\n        if (!res.length) {\n          setError('No reviews');\n          return;\n        }\n        console.log(res);\n        setReviews(res);\n      })\n      .catch(error => {\n        console.log(error);\n        setError('Oops, smth went wrong...');\n      })\n      .finally(() => setLoading(false));\n  }, [id]);\n\n  return (\n    <div>\n      {loading && 'Loading ...'}\n      {error && <div>{error}</div>}\n      <ul>\n        {reviews &&\n          reviews.map(review => (\n            <li key={review.id}>\n              <h2>{review.author}</h2>\n              <p>{review.content}</p>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","END_POINTS","API_KEY","getTrendingMovies","params","api_key","movies","data","results","getSearchMovies","query","getMovieDetails","id","movie","getMovieCredits","credits","cast","getMovieReviews","reviews","useState","setReviews","error","setError","loading","setLoading","useParams","useEffect","then","res","length","console","log","catch","finally","map","review","author","content"],"sourceRoot":""}